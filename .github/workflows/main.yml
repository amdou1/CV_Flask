amadou
amadou#8669



Salon textuel
LICENCE ASSI:„Äêüìä„Äëbase-de-donn√©es-stocker
Rechercher

Discussion de „Äêüìä„Äëbase-de-donn√©es-stocker
5 f√©vrier 2024
[14:27]StunRaptor: http://kik.alwaysdata.net/fr
[14:28]S Info.: https://ameya.alwaysdata.net/
[14:30]maxime: https://makscime.alwaysdata.net/
[14:31]Mister Robot (Th√©ophile): https://github.com/rocksurvie/flask_hello_world/blob/main/.github/workflows/main.yml
GitHub
flask_hello_world/.github/workflows/main.yml at main ¬∑ rocksurvie/f...
Contribute to rocksurvie/flask_hello_world development by creating an account on GitHub.

[14:32]Imedine: https://github.com/ShaunJenkins/flask_hello_world
GitHub
GitHub - ShaunJenkins/flask_hello_world
Contribute to ShaunJenkins/flask_hello_world development by creating an account on GitHub.

[14:32]Lays (Adam): https://github.com/amonfcerfal/flask_hello_world
GitHub
GitHub - amonfcerfal/flask_hello_world
Contribute to amonfcerfal/flask_hello_world development by creating an account on GitHub.

[14:32]PaalKia (FILIPE): https://github.com/PaalKia/flask_hello_world
GitHub
GitHub - PaalKia/flask_hello_world
Contribute to PaalKia/flask_hello_world development by creating an account on GitHub.

[14:33]amadou: https://github.com/amdou1/flask_hello_world
GitHub
GitHub - amdou1/flask_hello_world
Contribute to amdou1/flask_hello_world development by creating an account on GitHub.

[14:33]maxime: https://github.com/J0yfuln7/flask_hello_world
GitHub
GitHub - J0yfuln7/flask_hello_world
Contribute to J0yfuln7/flask_hello_world development by creating an account on GitHub.

[14:33]StunRaptor: https://github.com/Unsterbliicher/flask_hello_world
GitHub
GitHub - Unsterbliicher/flask_hello_world
Contribute to Unsterbliicher/flask_hello_world development by creating an account on GitHub.

[14:33]JeanMoul2: https://github.com/baptlacast/flask_hello_world
GitHub
GitHub - baptlacast/flask_hello_world
Contribute to baptlacast/flask_hello_world development by creating an account on GitHub.

[14:34]Majesty-Sama (Rahul): https://rahul05.alwaysdata.net/flask
[14:34]~Ti√Æ-l√µ√ª~üî•: https://github.com/t-l93/flask_hello_world
GitHub
GitHub - t-l93/flask_hello_world
Contribute to t-l93/flask_hello_world development by creating an account on GitHub.
[14:35]S Info.: https://github.com/Samey700/flask_hello_world
GitHub
GitHub - Samey700/flask_hello_world
Contribute to Samey700/flask_hello_world development by creating an account on GitHub.

[14:35]nath: https://github.com/NaTh987/flask_hello_world
GitHub
GitHub - NaTh987/flask_hello_world
Contribute to NaTh987/flask_hello_world development by creating an account on GitHub.

[14:35]Majesty-Sama (Rahul): https://github.com/Melio-sama/flask_hello_world
GitHub
GitHub - Melio-sama/flask_hello_world
Contribute to Melio-sama/flask_hello_world development by creating an account on GitHub.

[14:35]Lenny_: https://github.com/ElieRABI/flask_hello_world
GitHub
GitHub - ElieRABI/flask_hello_world
Contribute to ElieRABI/flask_hello_world development by creating an account on GitHub.

[14:36]Noa: sequence 1 : https://noa917000.alwaysdata.net/ (modifi√©)
[14:38]Noa: sequence 2 : https://github.com/Noa917/flask_hello_world
[14:47]lulu42: https://github.com/lulu38000/flask_hello_world
GitHub
GitHub - lulu38000/flask_hello_world
Contribute to lulu38000/flask_hello_world development by creating an account on GitHub.

[14:52]Lays (Adam):

[14:53]Lays (Adam):

[14:53]Imedine:

[14:58]maxime:

[14:59]S Info.:

[14:59]StunRaptor:

[15:02]JeanMoul2: https://jeanmoul2.alwaysdata.net/flask (modifi√©)

[15:03]PaalKia (FILIPE):

[15:05]maxime:

[15:11]Noa:

[15:23]maxime: Nouvelle route :
https://makscime.alwaysdata.net/fr
[15:23]Lays (Adam): https://lays.alwaysdata.net/fr/
[15:23]JeanMoul2: https://jeanmoul2.alwaysdata.net/fr
[15:23]Mister Robot (Th√©ophile): https://tawasaki.alwaysdata.net/fr/
[15:24]Imedine: https://imedine.alwaysdata.net/fr/
[15:25]PaalKia (FILIPE): http://martins.alwaysdata.net/fr/
[15:29]amadou:

[15:31]StunRaptor: http://kik.alwaysdata.net/fr
[15:31]S Info.: https://ameya.alwaysdata.net/fr/
[15:38]nath:

[15:43]Majesty-Sama (Rahul):

[15:43]Majesty-Sama (Rahul):

[15:48]lulu42: http://lucile42.alwaysdata.net/fr/
[15:50]Lays (Adam): https://lays.alwaysdata.net/rapport/
[15:54]lulu42: http://lucile42.alwaysdata.net/paris/
[15:55]PaalKia (FILIPE): http://martins.alwaysdata.net/rapport/
[15:55]Lenny_: https://rabi.alwaysdata.net/flask/paris/
[15:55]Lenny_: https://rabi.alwaysdata.net/flask/rapport/
[15:56]Majesty-Sama (Rahul): https://rahul05.alwaysdata.net/flask/rapport/
[15:57]S Info.: https://ameya.alwaysdata.net/paris/
[15:57]Majesty-Sama (Rahul): https://rahul05.alwaysdata.net/flask/paris/
[15:57]S Info.: https://ameya.alwaysdata.net/rapport/
[15:59]lulu42: http://lucile42.alwaysdata.net/rapport/
[16:02]Lays (Adam): https://lays.alwaysdata.net/histogramme/
[16:20]~Ti√Æ-l√µ√ª~üî•: https://celin.alwaysdata.net/rapport/
[16:20]maxime: https://makscime.alwaysdata.net/paris
https://makscime.alwaysdata.net/rapport
[16:22]Imedine: https://imedine.alwaysdata.net/rapport/
[16:22]PaalKia (FILIPE): http://martins.alwaysdata.net/rapport/
[16:23]S Info.: https://ameya.alwaysdata.net/histogramme/
[16:30]Mister Robot (Th√©ophile): https://tawasaki.alwaysdata.net/rapport/
[16:34]Lenny_: https://rabi.alwaysdata.net/flask/rapport/
[16:38]Imedine: https://imedine.alwaysdata.net/histogramme/
[16:46]S Info.: https://ameya.alwaysdata.net/consultation/
[16:51]maxime: https://makscime.alwaysdata.net/histogramme
[16:52]Lays (Adam): https://lays.alwaysdata.net/consultation/
[16:54]StunRaptor: http://kik.alwaysdata.net/rapport/
[16:55]Lays (Adam): https://lays.alwaysdata.net/fiche_client/1
[16:57]Lays (Adam): https://lays.alwaysdata.net/recherche_client/DUPONT
[16:59]lulu42: http://lucile42.alwaysdata.net/consultation/
[17:01]lulu42: http://lucile42.alwaysdata.net/fiche_client/1
[17:03]PaalKia (FILIPE): https://martins.alwaysdata.net/histogramme
[17:03]PaalKia (FILIPE): https://martins.alwaysdata.net/rapport
[17:03]Imedine: S√©quence 1 :

[17:05]~Ti√Æ-l√µ√ª~üî•: https://celin.alwaysdata.net/histogramme/
[17:06]S Info.: https://ameya.alwaysdata.net/fiche_client/MARTIN
[17:12]Imedine: s√©quence 2 https://imedine.alwaysdata.net/consultation/
[17:13]~Ti√Æ-l√µ√ª~üî•: https://celin.alwaysdata.net/consultation/
[17:14]StunRaptor: http://kik.alwaysdata.net/histoiregramme/
[17:24]Lays (Adam): https://lays.alwaysdata.net/nouveau_client
[17:25]Lenny_: https://rabi.alwaysdata.net/flask/histogramme/
[17:34]Majesty-Sama (Rahul): https://rahul05.alwaysdata.net/flask/consultation/
[17:34]lulu42: http://lucile42.alwaysdata.net/histogramme/
[17:38]Majesty-Sama (Rahul): https://rahul05.alwaysdata.net/flask/fiche_client/1
[17:39]Noa: https://noa917000.alwaysdata.net/histoiregramme/
[17:41]Imedine: https://imedine.alwaysdata.net/recherche/DUPONT
[17:45]PaalKia (FILIPE): http://martins.alwaysdata.net/recherche_fiche_client
[17:45]Noa: sequence 1 BDD

[18:15]boris9306: Symphauror : Je ne trouve pas ta fiche d'enregistrement d'un nouveau client
[19:52]nath: https://nath200.alwaysdata.net/fr/
[20:00]nath: https://nath200.alwaysdata.net/paris/
[20:12]nath: https://nath200.alwaysdata.net/rapport/
[20:37]nath: https://nath200.alwaysdata.net/histogramme/
[21:31]nath: https://nath200.alwaysdata.net/consultation/
[21:37]nath: https://nath200.alwaysdata.net/fiche_client/2
8 f√©vrier 2024
[08:50]boris9306: -------------------------------------------------------------------
Atelier Du Jour (08/02)
-------------------------------------------------------------------
[08:52]boris9306: Bonjour √† tous

Comme √©voqu√© lundi, la s√©ance de ce matin est consacr√©e √† la r√©alisation d'un mini projet CV en ligne. Ce projet vous permettra de revoir toutes les notions acquises lors de nos diff√©rentes s√©ances.

Projet : Cr√©ation d'un CV en ligne.
Objectif - Mise en ligne d'un CV

Technique : 
Utilisation d'un compte GitHUB
Utilisation d'un serveur Flask (Alwaysdata) et BDD Sqlite
Utilisation du CV suivant : https://github.com/OpenRSI/CV_Flask.git

Les exigences :
La mise en ligne de vos modifications sera automatis√©e via une action GitHUB (voir fichier joint).

Les fonctionnalit√©s :
L'internaute pourra vous laisser un message via un champ "Laissez moi un message"
Vous serez en mesure de pouvoir consulter vos messages via une API de consultation accessible au travers de la route suivante : https://%7Bvotre_url%7D/consultation/5625719273
Remarque : Par mesure de s√©curit√©, votre API de consultation utilisera la cl√© sym√©trique "5625719273" vous autorisera √† consulter vos messages.
Une page de statistiques sera √©galement accessible depuis l'API  https://%7Bvotre_url%7D/graphique/5625719273
Il s'agira dans cette page de pr√©senter la quantit√© de messages d√©pos√©s chaque jour sur votre site sous la forme d'un graphique (graphique √† votre convenance).
[08:52]boris9306: Processus :
1¬∞ - Cr√©ation d'un h√©bergement Alwaysdata (Serveur Flask)
2¬∞ - Faire un fork du repository https://github.com/OpenRSI/CV_Flask.git
3¬∞- Cr√©ez votre action GitHUB (Fichier joint). Pensez √† adapter la ligne "git clone https://github.com/OpenRSI/CV_Flask.git" dans ce script afin de faire r√©f√©rence √† votre propre repository GitHUB.
4¬∞ - Choisissez le CV qui vous convient, adaptez le (un peu de texte) en faites en votre point d'entr√©e de votre site. C'est √† dire accessible depuis la route "/"
5¬∞ - Cr√©ation d'un BDD Sqlite (pensez au champs que vous avez besion)
6¬∞ - Cr√©ation d'un formulaire et de l'API de consultation
7¬∞ - Cr√©ation d'un graphique de statistiques
[08:52]boris9306:
name: Industrialisation continue sur le serveur Alwaysdata
on: push
jobs:
  Connexion:
    runs-on: ubuntu-latest
    steps:
      - name: Connexion SSH avec le serveur
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd $HOME/www/
  Copy:
    needs: Connexion
    runs-on: ubuntu-latest
    steps:
      - name: Connexion SSH avec le serveur
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd $HOME/www/
            git clone https://github.com/OpenRSI/CV_Flask.git
            # V√©rifier si le r√©pertoire de destination existe
            if [ "$(ls -A ./flask)" ]; then
              rsync -r ./CV_Flask/ ./flask
              rm -rf ./CV_Flask
            else
              echo "Le r√©pertoire flask de destination sur votre serveur n'existe pas"
              exit 1
            fi
  Restart:
    needs: Copy
    runs-on: ubuntu-latest
    steps:
      - name: Restart Alwaysdata site
        run: |
          response_code=$(curl -s -o /dev/null -w "%{http_code}" -X POST --basic --user "${{ secrets.ALWAYSDATA_TOKEN }}:" https://api.alwaysdata.com/v1/site/${{ secrets.ALWAYSDATA_SITE_ID }}/restart/)
          # V√©rifier le code de r√©ponse HTTP
          if [ "$response_code" -eq 204 ]; then
            echo "Relance de votre site r√©ussi"
          elif [ "$response_code" -eq 404 ]; then
            echo "Vous n'avez pas renseigner correctement votre secret ALWAYSDATA_SITE_ID"
            exit 1  # Quitter avec un code d'erreur
          elif [ "$response_code" -eq 401 ]; then
            echo "Vous n'avez pas renseigner correctement votre secret ALWAYSDATA_TOKEN"
          exit 1  # Quitter avec un code d'erreur
          else
            echo "√âchec du red√©marrage avec le code de r√©ponse : $response_code"
            exit 1  # Quitter avec un code d'erreur
          fi
R√©duire
Script_Action_CV.txt
3¬†Ko
[08:54]boris9306: --------------------------------------------------------------------
[08:55]boris9306: + Je vous lance les "Blocs R√©visions" UTC502 & NFP107 vers 11h

Envoyer un message dans #„Äêüìä„Äëbase-de-donn√©es-stocker
Ôªø




 pour s√©lectionner
Liste des membres pour „Äêüìä„Äëbase-de-donn√©es-stocker (salon)
üëë, 1¬†MEMBREüëë ‚Äî 1

JeanMoul2
V√âRIFI√â, 13¬†MEMBRESV√âRIFI√â ‚Äî 13

andre

boris9306

Herbe Rapide
Cultive de l'Herbe üåø

Imedine

J UwU L (Jules)

Lays (Adam)

Lenny_

maxime
joue √† rien

PaalKia (FILIPE)

RMaillot.com

S Info.

theochsst

~Ti√Æ-l√µ√ª~üî•
EN LIGNE, 4¬†MEMBRESEN LIGNE ‚Äî 4

MEE6
BOT

Tempo prefix: -
BOT
√âcoute tempobot.net | /play

Wick
BOT
Regarde wickbot.com | Shard388

üê¢ La tortue ninja
BOT
Joue √† /help | carl.gg
HORS LIGNE, 21¬†MEMBRESHORS LIGNE ‚Äî 21

amadou
name: Industrialisation continue sur le serveur Alwaysdata
on: push
jobs:
  Connexion:
    runs-on: ubuntu-latest
    steps:
      - name: Connexion SSH avec le serveur
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd $HOME/www/
  Copy:
    needs: Connexion
    runs-on: ubuntu-latest
    steps:
      - name: Connexion SSH avec le serveur
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd $HOME/www/
            git clone https://github.com/OpenRSI/CV_Flask.git
            # V√©rifier si le r√©pertoire de destination existe
            if [ "$(ls -A ./flask)" ]; then
              rsync -r ./CV_Flask/ ./flask
              rm -rf ./CV_Flask
            else
              echo "Le r√©pertoire flask de destination sur votre serveur n'existe pas"
              exit 1
            fi
  Restart:
    needs: Copy
    runs-on: ubuntu-latest
    steps:
      - name: Restart Alwaysdata site
        run: |
          response_code=$(curl -s -o /dev/null -w "%{http_code}" -X POST --basic --user "${{ secrets.ALWAYSDATA_TOKEN }}:" https://api.alwaysdata.com/v1/site/${{ secrets.ALWAYSDATA_SITE_ID }}/restart/)
          # V√©rifier le code de r√©ponse HTTP
          if [ "$response_code" -eq 204 ]; then
            echo "Relance de votre site r√©ussi"
          elif [ "$response_code" -eq 404 ]; then
            echo "Vous n'avez pas renseigner correctement votre secret ALWAYSDATA_SITE_ID"
            exit 1  # Quitter avec un code d'erreur
          elif [ "$response_code" -eq 401 ]; then
            echo "Vous n'avez pas renseigner correctement votre secret ALWAYSDATA_TOKEN"
          exit 1  # Quitter avec un code d'erreur
          else
            echo "√âchec du red√©marrage avec le code de r√©ponse : $response_code"
            exit 1  # Quitter avec un code d'erreur
          fi
Script_Action_CV.txt
3¬†Ko
